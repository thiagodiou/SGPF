package br.com.banestes.car.core.validator;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.faces.application.FacesMessage;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.validator.FacesValidator;
import javax.faces.validator.Validator;
import javax.faces.validator.ValidatorException;

@FacesValidator("validatorHora")
public class ValidatorHora implements Validator{

	private static final String HORA_PATTERN = "^(([0-1][0-9])|[2][0-3]):([0-5][0-9])$";
	
	
	private Pattern pattern;
	private Matcher matcher;
	
	
	public ValidatorHora(){
		  pattern = Pattern.compile(HORA_PATTERN);
	}
	
	@Override
	public void validate(FacesContext context, UIComponent component, Object value)
			throws ValidatorException {
		
		matcher = pattern.matcher(value.toString());
		if(!matcher.matches()){
			
			String nomeCampo =component.getAttributes().get("nomeInput").toString();
			
			FacesMessage msg = 
				new FacesMessage(String.format("O campo %s é inválido. [hh:mm]", nomeCampo));
			msg.setSeverity(FacesMessage.SEVERITY_ERROR);
			throw new ValidatorException(msg);

		}
		
	}

}
